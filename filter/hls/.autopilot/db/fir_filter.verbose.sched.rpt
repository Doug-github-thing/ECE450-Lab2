

================================================================
== Vitis HLS Report for 'fir_filter'
================================================================
* Date:           Sat Sep 27 20:26:39 2025

* Version:        2025.1 (Build 6135595 on May 21 2025)
* Project:        filter
* Solution:       hls (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a35t-cpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.207 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      263|      263|  2.630 us|  2.630 us|  264|  264|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Outer   |      261|      261|         7|          1|          1|   256|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 1, D = 7, States = { 2 3 4 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 2 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.61>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%i1 = alloca i32 1"   --->   Operation 10 'alloca' 'i1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 11 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%spectopmodule_ln10 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [filter.cpp:10]   --->   Operation 12 'spectopmodule' 'spectopmodule_ln10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %in_r, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %in_r"   --->   Operation 14 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %out_r, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %out_r"   --->   Operation 16 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%shift_reg_13_load = load i32 %shift_reg_13" [filter.cpp:20]   --->   Operation 17 'load' 'shift_reg_13_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%shift_reg_12_load = load i32 %shift_reg_12" [filter.cpp:20]   --->   Operation 18 'load' 'shift_reg_12_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%shift_reg_11_load = load i32 %shift_reg_11" [filter.cpp:20]   --->   Operation 19 'load' 'shift_reg_11_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%shift_reg_10_load = load i32 %shift_reg_10" [filter.cpp:20]   --->   Operation 20 'load' 'shift_reg_10_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%shift_reg_9_load = load i32 %shift_reg_9" [filter.cpp:20]   --->   Operation 21 'load' 'shift_reg_9_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%shift_reg_8_load = load i32 %shift_reg_8" [filter.cpp:20]   --->   Operation 22 'load' 'shift_reg_8_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%shift_reg_7_load = load i32 %shift_reg_7" [filter.cpp:20]   --->   Operation 23 'load' 'shift_reg_7_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%shift_reg_6_load = load i32 %shift_reg_6" [filter.cpp:20]   --->   Operation 24 'load' 'shift_reg_6_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%shift_reg_5_load = load i32 %shift_reg_5" [filter.cpp:20]   --->   Operation 25 'load' 'shift_reg_5_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%shift_reg_4_load = load i32 %shift_reg_4" [filter.cpp:20]   --->   Operation 26 'load' 'shift_reg_4_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%shift_reg_3_load = load i32 %shift_reg_3" [filter.cpp:20]   --->   Operation 27 'load' 'shift_reg_3_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%shift_reg_2_load = load i32 %shift_reg_2" [filter.cpp:20]   --->   Operation 28 'load' 'shift_reg_2_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%shift_reg_1_load = load i32 %shift_reg_1" [filter.cpp:20]   --->   Operation 29 'load' 'shift_reg_1_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%shift_reg_0_load = load i32 %shift_reg_0" [filter.cpp:20]   --->   Operation 30 'load' 'shift_reg_0_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.61ns)   --->   "%store_ln20 = store i32 %shift_reg_13_load, i32 %empty" [filter.cpp:20]   --->   Operation 31 'store' 'store_ln20' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 32 [1/1] (1.61ns)   --->   "%store_ln0 = store i8 0, i8 %i1"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 33 [1/1] (1.61ns)   --->   "%br_ln13 = br void %SHIFT.split" [filter.cpp:13]   --->   Operation 33 'br' 'br_ln13' <Predicate = true> <Delay = 1.61>

State 2 <SV = 1> <Delay = 3.72>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%i1_load = load i8 %i1" [filter.cpp:13]   --->   Operation 34 'load' 'i1_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i8 %i1_load" [filter.cpp:13]   --->   Operation 35 'zext' 'zext_ln13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%in_r_addr = getelementptr i32 %in_r, i64 0, i64 %zext_ln13" [filter.cpp:23]   --->   Operation 36 'getelementptr' 'in_r_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [2/2] (3.25ns)   --->   "%in_r_load = load i8 %in_r_addr" [filter.cpp:23]   --->   Operation 37 'load' 'in_r_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_2 : Operation 38 [1/1] (2.11ns)   --->   "%i = add i8 %i1_load, i8 1" [filter.cpp:13]   --->   Operation 38 'add' 'i' <Predicate = true> <Delay = 2.11> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (2.11ns)   --->   "%icmp_ln13 = icmp_eq  i8 %i1_load, i8 255" [filter.cpp:13]   --->   Operation 39 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 2.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (1.61ns)   --->   "%store_ln13 = store i8 %i, i8 %i1" [filter.cpp:13]   --->   Operation 40 'store' 'store_ln13' <Predicate = true> <Delay = 1.61>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln13 = br i1 %icmp_ln13, void %SHIFT.split, void %for.end24" [filter.cpp:13]   --->   Operation 41 'br' 'br_ln13' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%empty_7 = phi i32 %shift_reg_10_load, void %entry, i32 %empty_8, void %SHIFT.split" [filter.cpp:20]   --->   Operation 42 'phi' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%empty_8 = phi i32 %shift_reg_9_load, void %entry, i32 %empty_9, void %SHIFT.split" [filter.cpp:20]   --->   Operation 43 'phi' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%empty_9 = phi i32 %shift_reg_8_load, void %entry, i32 %empty_10, void %SHIFT.split" [filter.cpp:20]   --->   Operation 44 'phi' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%empty_10 = phi i32 %shift_reg_7_load, void %entry, i32 %empty_11, void %SHIFT.split" [filter.cpp:20]   --->   Operation 45 'phi' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%empty_11 = phi i32 %shift_reg_6_load, void %entry, i32 %empty_12, void %SHIFT.split" [filter.cpp:20]   --->   Operation 46 'phi' 'empty_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%empty_12 = phi i32 %shift_reg_5_load, void %entry, i32 %empty_13, void %SHIFT.split" [filter.cpp:20]   --->   Operation 47 'phi' 'empty_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%empty_13 = phi i32 %shift_reg_4_load, void %entry, i32 %empty_14, void %SHIFT.split" [filter.cpp:20]   --->   Operation 48 'phi' 'empty_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%empty_14 = phi i32 %shift_reg_3_load, void %entry, i32 %empty_15, void %SHIFT.split" [filter.cpp:20]   --->   Operation 49 'phi' 'empty_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%empty_15 = phi i32 %shift_reg_2_load, void %entry, i32 %empty_16, void %SHIFT.split" [filter.cpp:20]   --->   Operation 50 'phi' 'empty_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%empty_16 = phi i32 %shift_reg_1_load, void %entry, i32 %empty_17, void %SHIFT.split" [filter.cpp:20]   --->   Operation 51 'phi' 'empty_16' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%empty_17 = phi i32 %shift_reg_0_load, void %entry, i32 %in_r_load, void %SHIFT.split" [filter.cpp:20]   --->   Operation 52 'phi' 'empty_17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln13 = trunc i32 %empty_9" [filter.cpp:13]   --->   Operation 53 'trunc' 'trunc_ln13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln13_1 = trunc i32 %empty_17" [filter.cpp:13]   --->   Operation 54 'trunc' 'trunc_ln13_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/2] ( I:3.25ns O:3.25ns )   --->   "%in_r_load = load i8 %in_r_addr" [filter.cpp:23]   --->   Operation 55 'load' 'in_r_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%empty_19 = trunc i32 %empty_13" [filter.cpp:20]   --->   Operation 56 'trunc' 'empty_19' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (2.70ns)   --->   "%tmp32 = add i32 %empty_7, i32 %empty_15" [filter.cpp:20]   --->   Operation 57 'add' 'tmp32' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (2.66ns)   --->   "%tmp3415 = sub i31 %trunc_ln13_1, i31 %trunc_ln13" [filter.cpp:13]   --->   Operation 58 'sub' 'tmp3415' <Predicate = true> <Delay = 2.66> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.86>
ST_4 : Operation 59 [2/2] (6.86ns)   --->   "%tmp33 = mul i32 %tmp32, i32 4294967293" [filter.cpp:20]   --->   Operation 59 'mul' 'tmp33' <Predicate = true> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 7.20>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%empty_5 = phi i32 %shift_reg_12_load, void %entry, i32 %empty_6, void %SHIFT.split" [filter.cpp:20]   --->   Operation 60 'phi' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%empty_6 = phi i32 %shift_reg_11_load, void %entry, i32 %empty_7, void %SHIFT.split" [filter.cpp:20]   --->   Operation 61 'phi' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%p_load = load i32 %empty"   --->   Operation 62 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (2.70ns)   --->   "%tmp = add i32 %p_load, i32 %empty_12" [filter.cpp:20]   --->   Operation 63 'add' 'tmp' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%empty_18 = shl i32 %tmp, i32 2" [filter.cpp:20]   --->   Operation 64 'shl' 'empty_18' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%p_neg10 = sub i32 0, i32 %empty_18" [filter.cpp:20]   --->   Operation 65 'sub' 'p_neg10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 66 [1/1] (4.50ns) (root node of TernaryAdder)   --->   "%tmp29 = sub i32 %p_neg10, i32 %tmp" [filter.cpp:20]   --->   Operation 66 'sub' 'tmp29' <Predicate = true> <Delay = 4.50> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%empty_20 = trunc i32 %empty_5" [filter.cpp:20]   --->   Operation 67 'trunc' 'empty_20' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (2.63ns)   --->   "%tmp3017 = add i30 %empty_20, i30 %empty_19" [filter.cpp:20]   --->   Operation 68 'add' 'tmp3017' <Predicate = true> <Delay = 2.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 69 [1/2] (6.86ns)   --->   "%tmp33 = mul i32 %tmp32, i32 4294967293" [filter.cpp:20]   --->   Operation 69 'mul' 'tmp33' <Predicate = true> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (1.61ns)   --->   "%store_ln20 = store i32 %empty_5, i32 %empty" [filter.cpp:20]   --->   Operation 70 'store' 'store_ln20' <Predicate = true> <Delay = 1.61>

State 6 <SV = 5> <Delay = 4.50>
ST_6 : Operation 71 [1/1] (0.00ns)   --->   "%tmp1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i30.i2, i30 %tmp3017, i2 0" [filter.cpp:20]   --->   Operation 71 'bitconcatenate' 'tmp1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 72 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln29_2 = add i32 %tmp1, i32 %tmp29" [filter.cpp:29]   --->   Operation 72 'add' 'add_ln29_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 73 [1/1] (4.50ns) (root node of TernaryAdder)   --->   "%add_ln29_3 = add i32 %add_ln29_2, i32 %tmp33" [filter.cpp:29]   --->   Operation 73 'add' 'add_ln29_3' <Predicate = true> <Delay = 4.50> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 7 <SV = 6> <Delay = 7.20>
ST_7 : Operation 74 [1/1] (0.00ns)   --->   "%tmp2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %tmp3415, i1 0" [filter.cpp:13]   --->   Operation 74 'bitconcatenate' 'tmp2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 75 [1/1] (2.70ns)   --->   "%add_ln29 = add i32 %tmp2, i32 %empty_10" [filter.cpp:29]   --->   Operation 75 'add' 'add_ln29' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 76 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln29_1 = add i32 %add_ln29, i32 %in_r_load" [filter.cpp:29]   --->   Operation 76 'add' 'add_ln29_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 77 [1/1] (4.50ns) (root node of TernaryAdder)   --->   "%add_ln29_4 = add i32 %add_ln29_3, i32 %add_ln29_1" [filter.cpp:29]   --->   Operation 77 'add' 'add_ln29_4' <Predicate = true> <Delay = 4.50> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 8 <SV = 7> <Delay = 3.25>
ST_8 : Operation 78 [1/1] (0.00ns)   --->   "%specpipeline_ln14 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [filter.cpp:14]   --->   Operation 78 'specpipeline' 'specpipeline_ln14' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 79 [1/1] (0.00ns)   --->   "%speclooptripcount_ln13 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 256, i64 256, i64 256" [filter.cpp:13]   --->   Operation 79 'speclooptripcount' 'speclooptripcount_ln13' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 80 [1/1] (0.00ns)   --->   "%specloopname_ln13 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [filter.cpp:13]   --->   Operation 80 'specloopname' 'specloopname_ln13' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 81 [1/1] (0.00ns)   --->   "%out_r_addr = getelementptr i32 %out_r, i64 0, i64 %zext_ln13" [filter.cpp:32]   --->   Operation 81 'getelementptr' 'out_r_addr' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 82 [1/1] ( I:3.25ns O:3.25ns )   --->   "%store_ln32 = store i32 %add_ln29_4, i8 %out_r_addr" [filter.cpp:32]   --->   Operation 82 'store' 'store_ln32' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>

State 9 <SV = 8> <Delay = 0.00>
ST_9 : Operation 83 [1/1] (0.00ns)   --->   "%store_ln20 = store i32 %empty_5, i32 %shift_reg_13" [filter.cpp:20]   --->   Operation 83 'store' 'store_ln20' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 84 [1/1] (0.00ns)   --->   "%store_ln20 = store i32 %empty_6, i32 %shift_reg_12" [filter.cpp:20]   --->   Operation 84 'store' 'store_ln20' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 85 [1/1] (0.00ns)   --->   "%store_ln20 = store i32 %empty_7, i32 %shift_reg_11" [filter.cpp:20]   --->   Operation 85 'store' 'store_ln20' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 86 [1/1] (0.00ns)   --->   "%store_ln20 = store i32 %empty_8, i32 %shift_reg_10" [filter.cpp:20]   --->   Operation 86 'store' 'store_ln20' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 87 [1/1] (0.00ns)   --->   "%store_ln20 = store i32 %empty_9, i32 %shift_reg_9" [filter.cpp:20]   --->   Operation 87 'store' 'store_ln20' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 88 [1/1] (0.00ns)   --->   "%store_ln20 = store i32 %empty_10, i32 %shift_reg_8" [filter.cpp:20]   --->   Operation 88 'store' 'store_ln20' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 89 [1/1] (0.00ns)   --->   "%store_ln20 = store i32 %empty_11, i32 %shift_reg_7" [filter.cpp:20]   --->   Operation 89 'store' 'store_ln20' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 90 [1/1] (0.00ns)   --->   "%store_ln20 = store i32 %empty_12, i32 %shift_reg_6" [filter.cpp:20]   --->   Operation 90 'store' 'store_ln20' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 91 [1/1] (0.00ns)   --->   "%store_ln20 = store i32 %empty_13, i32 %shift_reg_5" [filter.cpp:20]   --->   Operation 91 'store' 'store_ln20' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 92 [1/1] (0.00ns)   --->   "%store_ln20 = store i32 %empty_14, i32 %shift_reg_4" [filter.cpp:20]   --->   Operation 92 'store' 'store_ln20' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 93 [1/1] (0.00ns)   --->   "%store_ln20 = store i32 %empty_15, i32 %shift_reg_3" [filter.cpp:20]   --->   Operation 93 'store' 'store_ln20' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 94 [1/1] (0.00ns)   --->   "%store_ln20 = store i32 %empty_16, i32 %shift_reg_2" [filter.cpp:20]   --->   Operation 94 'store' 'store_ln20' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 95 [1/1] (0.00ns)   --->   "%store_ln20 = store i32 %empty_17, i32 %shift_reg_1" [filter.cpp:20]   --->   Operation 95 'store' 'store_ln20' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 96 [1/1] (0.00ns)   --->   "%store_ln20 = store i32 %in_r_load, i32 %shift_reg_0" [filter.cpp:20]   --->   Operation 96 'store' 'store_ln20' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 97 [1/1] (0.00ns)   --->   "%ret_ln36 = ret" [filter.cpp:36]   --->   Operation 97 'ret' 'ret_ln36' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.610ns
The critical path consists of the following:
	'alloca' operation 32 bit ('empty') [18]  (0.000 ns)
	'store' operation 0 bit ('store_ln20', filter.cpp:20) of variable 'shift_reg_13_load', filter.cpp:20 on local variable 'empty' [38]  (1.610 ns)

 <State 2>: 3.725ns
The critical path consists of the following:
	'load' operation 8 bit ('i1_load', filter.cpp:13) on local variable 'i1' [55]  (0.000 ns)
	'add' operation 8 bit ('i', filter.cpp:13) [84]  (2.115 ns)
	'store' operation 0 bit ('store_ln13', filter.cpp:13) of variable 'i', filter.cpp:13 on local variable 'i1' [87]  (1.610 ns)

 <State 3>: 3.257ns
The critical path consists of the following:
	'load' operation 32 bit ('in_r_load', filter.cpp:23) on array 'in_r' [64]  (3.257 ns)

 <State 4>: 6.860ns
The critical path consists of the following:
	'mul' operation 32 bit ('tmp33', filter.cpp:20) [74]  (6.860 ns)

 <State 5>: 7.207ns
The critical path consists of the following:
	'load' operation 32 bit ('p_load') on local variable 'empty' [56]  (0.000 ns)
	'add' operation 32 bit ('tmp', filter.cpp:20) [65]  (2.702 ns)
	'sub' operation 32 bit ('tmp29', filter.cpp:20) [68]  (4.505 ns)

 <State 6>: 4.505ns
The critical path consists of the following:
	'add' operation 32 bit ('add_ln29_2', filter.cpp:29) [79]  (0.000 ns)
	'add' operation 32 bit ('add_ln29_3', filter.cpp:29) [80]  (4.505 ns)

 <State 7>: 7.207ns
The critical path consists of the following:
	'add' operation 32 bit ('add_ln29', filter.cpp:29) [77]  (2.702 ns)
	'add' operation 32 bit ('add_ln29_1', filter.cpp:29) [78]  (0.000 ns)
	'add' operation 32 bit ('add_ln29_4', filter.cpp:29) [81]  (4.505 ns)

 <State 8>: 3.257ns
The critical path consists of the following:
	'getelementptr' operation 8 bit ('out_r_addr', filter.cpp:32) [82]  (0.000 ns)
	'store' operation 0 bit ('store_ln32', filter.cpp:32) of variable 'add_ln29_4', filter.cpp:29 on array 'out_r' [83]  (3.257 ns)

 <State 9>: 0.000ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
